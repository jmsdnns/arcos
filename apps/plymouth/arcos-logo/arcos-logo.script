#
# ArcOS Plymouth Theme
#


# Colors --------------------------------------------------

# BG = #262b36
window_bg.red = 0.15;
window_bg.green = 0.17;
window_bg.blue = 0.21;

Window.SetBackgroundTopColor (window_bg.red, window_bg.green, window_bg.blue);
Window.SetBackgroundBottomColor (window_bg.red, window_bg.green, window_bg.blue);


# Images --------------------------------------------------

logo.image = Image("arcos_logo.png");
logo.sprite = Sprite(logo.image);
logo.sprite.SetX (Window.GetX() + Window.GetWidth()  / 2 - logo.image.GetWidth()  / 2);
logo.sprite.SetY (Window.GetY() + Window.GetHeight() / 2 - logo.image.GetHeight() / 2);
logo.sprite.SetOpacity (1);


# Normal --------------------------------------------------

fun display_normal_callback () {
    global.status = "normal";
    if (global.dialog) {
        dialog_opacity (0);
    }
}

Plymouth.SetDisplayNormalFunction(display_normal_callback);


# Progress Bar --------------------------------------------

fun progress_callback (duration, progress) {
    # Progress
}

Plymouth.SetBootProgressFunction(progress_callback);


# Quit ----------------------------------------------------

fun quit_callback () {
    logo.sprite.SetOpacity (1);
}

Plymouth.SetQuitFunction(quit_callback);


# Message -------------------------------------------------

message_sprite = Sprite();
message_sprite.SetPosition(10, 10, 10000);


fun display_message_callback (text) {
    my_image = Image.Text(text, 1, 1, 1);
    message_sprite.SetImage(my_image);
}

Plymouth.SetDisplayMessageFunction (display_message_callback);


fun hide_message_callback (text) {
    message_sprite = Sprite();
    message_sprite.SetPosition(10, 10, 10000);
}

Plymouth.SetHideMessageFunction (hide_message_callback);


# Refresh -------------------------------------------------

status = "normal";

fun refresh_callback () {
    # Refresh
}
  
Plymouth.SetRefreshFunction (refresh_callback);


# Dialogue ------------------------------------------------

fun dialog_setup() {
    local.box;
    local.lock;
    local.entry;
    
    box.image = Image("box.png");box.sprite = Sprite(box.image);
    box.x = Window.GetX() + Window.GetWidth()  / 2 - box.image.GetWidth ()/2;
    box.y = Window.GetY() + Window.GetHeight() / 2 - box.image.GetHeight()/2;
    box.z = 10000;
    box.sprite.SetPosition(box.x, box.y, box.z);
    
    lock.image = Image("lock.png");
    lock.sprite = Sprite(lock.image);
    lock.x = box.x + box.image.GetWidth()/2 - (lock.image.GetWidth() + entry.image.GetWidth()) / 2;
    lock.y = box.y + box.image.GetHeight()/2 - lock.image.GetHeight()/2;
    lock.z = box.z + 1;
    lock.sprite.SetPosition(lock.x, lock.y, lock.z);
    
    entry.image = Image("entry.png");
    entry.sprite = Sprite(entry.image);
    entry.x = lock.x + lock.image.GetWidth();
    entry.y = box.y + box.image.GetHeight()/2 - entry.image.GetHeight()/2;
    entry.z = box.z + 1;
    entry.sprite.SetPosition(entry.x, entry.y, entry.z);
    
    global.dialog.box = box;
    global.dialog.lock = lock;
    global.dialog.entry = entry;
    global.dialog.bullet_image = Image("bullet.png");
    dialog_opacity (1);
}
    
fun dialog_opacity(opacity) {
    dialog.box.sprite.SetOpacity (opacity);
    dialog.lock.sprite.SetOpacity (opacity);
    dialog.entry.sprite.SetOpacity (opacity);
    for (index = 0; dialog.bullet[index]; index++) {
        dialog.bullet[index].sprite.SetOpacity(opacity);
    }
}


# Password ------------------------------------------------

fun display_password_callback (prompt, bullets) {
    global.status = "password";
    if (!global.dialog)
	dialog_setup();
    else
	dialog_opacity(1);
    for (index = 0; dialog.bullet[index] || index < bullets; index++) {
        if (!dialog.bullet[index]) {
            dialog.bullet[index].sprite = Sprite(dialog.bullet_image);
            dialog.bullet[index].x = dialog.entry.x + index * dialog.bullet_image.GetWidth();
            dialog.bullet[index].y = dialog.entry.y + dialog.entry.image.GetHeight() / 2 - dialog.bullet_image.GetHeight() / 2;
            dialog.bullet[index].z = dialog.entry.z + 1;
            dialog.bullet[index].sprite.SetPosition(dialog.bullet[index].x, dialog.bullet[index].y, dialog.bullet[index].z);
        }
        if (index < bullets) {
            dialog.bullet[index].sprite.SetOpacity(1);
        }
        else {
            dialog.bullet[index].sprite.SetOpacity(0);
        }
    }
}

Plymouth.SetDisplayPasswordFunction(display_password_callback);
